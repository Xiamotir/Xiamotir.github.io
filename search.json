[{"title":"X-Bot","url":"/2019/12/11/X-Bot/","content":"![在这里插入图片描述](https://img-blog.csdnimg.cn/20200424102109478.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n<!-- more -->\n## 项目介绍\n\n**这是一个超迷你写字机器人。**\n\n\n## 整体展示\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200424102029730.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n## 关于机械臂\n\n那么CoreXY结构是什么东西呢？\n\n首先我们来了解一下目前比较流行的机械臂结构有哪些：\n\n### 最经典的XYZ结构\n\n![\\[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-Sq0njRF2-1587695201756)(img/xbot2.jpg)\\]](https://img-blog.csdnimg.cn/20200424102922437.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n\n![\\[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-4oRA6vWa-1587695201799)(img/xbot4.jpg)\\]](https://img-blog.csdnimg.cn/20200424103009624.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n这一类结构大家应该一眼就能看明白是怎么回事，简单说就是在X、Y、Z三个方向上都是独立的直线运动，虽然形式有多种比如图中的第一种被称作龙门式，一般在雕刻机领域用的很多；而第二种在比较追求小型化的3D打印机上经常可以看到其身影。\n\nXYZ结构的好处就结构非常简单，控制也很简单，由于三个方向上的运动都是解耦的（一个方向的运动不会影响到另一个方向），而且相对来说由于是纯线性驱动，其运动精度会比较容易控制。\n\n### DELTA结构\n![\\[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-838w1t5X-1587695201809)(img/xbot5.jpg)\\]](https://img-blog.csdnimg.cn/20200424103156477.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n\n\n\n由于我们身处三维空间，因此来说只要是三个*线性独立*的向量都可以用来表征空间中一个唯一的坐标，对应于机械臂中，就是说只要我有三个可以精确驱动控制的电机，我就可以玩出各种花样让一个机械臂精确地运动到某一点。在XYZ结构中，X、Y、Z三个电机的地位并不是对等的，而DELTA结构则以一种很巧妙的方式完全对称地放置三个电机，如上图所示。通过三根连杆两端一共六个万向关节的约束，DELTA机械臂的末端可以运动到三维空间中的任意一点（在行程范围内，且行程空间并不是和XYZ结构一样的一个立方体），这种结构的好处就是非常的**炫酷**，哈哈，其实几年前个人最早决定设计自己的3D打印机的时候，就对DELTA结构非常的热衷~由于杠杆效应，一般来说这类机械臂的运行速度都要比XYZ要快一些，同时由于非线性控制坐标解算需要消耗更多的计算资源，有兴趣的同学可以去了解一下DELTA结构到XYZ坐标的解算公式推导过程。\n\n### 圆柱结构\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200424103417395.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n\n提到XYZ大家首先想到的是笛卡尔坐标系，然而我们在中学的时候就学过另一种坐标系叫极坐标系，也就是用一个角度和一个长度就可以表征平面内一个点的坐标，而且其跟XY坐标的转换也很方便。那么讲极坐标系再加上一个Z轴的直线运动，就得到了这样的圆柱结构机械臂。这类机械臂在实际应用中见到的比较少，因为同为极坐标结构，下面这种SCARA结构有着更“拟人”的效果。\n\n### SCARA结构\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020042410335334.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n\n这一类机械臂的结构非常像人类手臂（虽然自由度差了很多，人手臂应该是7个自由度），优点很明显就是节省空间，缺点也很明显，由于远端的误差放大作用，对于电机角度控制的精度要求非常高，电机的一点点抖动传递到末端都可能造成很大的误差，因此在工业机械臂中，这类机械臂一般都是使用传动误差极小的谐波减速器。\n\n### CoreXY结构\n\n其实关于机械臂的结构还有各种各样，结构设计师们的脑洞实在是让人叹为观止，有兴趣的小伙伴可以去google一下国外的各种3D打印机作品，非常的有意思。这里只最后介绍一下X-Bot中采用的CoreXY结构。\n\n![\\[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-Nqam1vI0-1587695201823)(img/xbot7.jpg)\\]](https://img-blog.csdnimg.cn/20200424103457103.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n\n与传统XY结构不同，CoreXY是一种仅使用一根同步带就可以控制末端在XY两个方向运动的结构，非常巧妙；但是和绝大多数其他结构一样，CoreXY这种结构也会有电机和限位开关分散分布，电路连接走线比较麻烦的缺点；于是在其基础上，X-Bot改变了电机放置的位置，将其由两边放置改为中央放置，所有的电路板和电机集中布置，结构更紧凑。\n\n![\\[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-R4duoZEM-1587695201826)(img/xbot8.jpg)\\]](https://img-blog.csdnimg.cn/20200424103507201.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n\n\n\n## 电路设计篇\n\n电路很简单就是一个STM32的最小系统，电机驱动直接使用了一体式的驱动器，可以tb搜索一下有很多。蓝牙模块使用的是HC-05，12V供电就行。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200424102052808.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n## 固件篇\n直接移植了Arduino上面很成熟的grbl固件到STM32上，参数都已经设置好了，也把坐标转换函数从XY改为了CoreXY，keil直接烧录就能用了。\n\n## 其他\n在资料中含有借鉴的所有资料\n","tags":["DIY"]},{"title":"智能车","url":"/2019/09/23/智能车/","content":"怀恋做车的日子(๑•̀ㅂ•́)و✧\n<!-- more -->\n\n# 硬件准备\n\n## 1、LC震荡电路（电感值采集）\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190921152529690.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\nLC 振荡电路，是指用电感 L、电容 C 组成选频网络的振荡电路，**用于产生高频正弦波信号**\n谐振电路的振荡周期与电容电感的关系：\n                       T=2π√LC\n\n\n\n赛道信号源是20KHz的正弦波信号，这时我们就需要计算并选定好匹配的电感电容值，将电感电容并联焊接好，用示波器接上两端将电感放到赛道上观察波形是否为标准的20KHz正弦波，若不正常或波形失真严重，检查电感电容是否选取正确或无损坏，正常情况下都是没有问题的。\n## 2、主控和驱动制作\n分配一个专人制作硬件\n\n\n - **主控**\n要求不大，像蓝牙，oled，核心板底座（没必要全焊，全焊的话核心板不好插，用到哪些引脚就焊那些部分就行），尽量把运放模块也画到主控上，先焊电源部分，电源测试正常后再焊其他原器件\n\n - **驱动**\n 可选用btn和mos管两种方案，btn电路简单，mos管驱动能力强。我们一开始就是用btn驱动，但后来由于改装，车的负载增大，跑了一圈后驱动就因为过热保护了，后来换了mos管，就没有出现过热保护了。\n\n## 3、车体搭建\n\n 1. 将购买的零件一一安装好，车的前瞻碳杆用水平仪确保与地面平行，所有支架必须牢固，不允许有松动，只有你感觉支架和车模是一个整体了才是安装好了\n 2. 将电感两端与信号线焊好，信号线采取双绞缠绕提高抗干扰能力，电感可采用两外横，两内八分布，也可采用其他。基本上是外面两个判断中线，里面两个处理直角，圆环等特殊路段。记住电感按车体中轴线对称分布安装，不是按安装杆对称！！！\n 3. 尽量加一个防撞杆或者海绵缓冲，撞坏了再修好麻烦\n# 软件准备\n## 1、编译环境搭建\n安装好IAR并配置好编译环境\n具体过程参考网上众多教程，，，，，，\n## 2、工程模板搭建（山外库）\n为了使得工程架构更加清晰，因此我们需要对工程文件夹进行如下规定：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190921164358797.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n我们一般只需要在 APP文件夹中编写用户程序就可以了\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190921164629875.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n## 3、程序编写（山外库）\n 1. 我们将所有的处理函数都放到中断中执行，而不是传统的放在while大循环中，这样做的目的是为了保证整体的时序性，例如设置定时器每5ms产生一次中断，我们将电感采集处理函数放入中断服务函数当中，这样车子每5ms就可以采集处理一次信号，而while中却无法保证5ms的时序。（**记得在中断函数中加上电平翻转函数接上示波器看频率对不对防止中断溢出！！！！**）\n 2. 所有的io定义配置都在.config文件中，这个文件必须多多注意\n 3. 实时保存，多备份\n# 建议\n待续。。。。。。。。。。。。","tags":["智能车"]},{"title":"GitHub to HTML","url":"/2019/09/11/github_to_html/","content":"![在这里插入图片描述](https://img-blog.csdnimg.cn/20200424100832615.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n<!-- more -->\n## 1. 注册GitHub账号\n\n## 2. 安装Git\n\n## 3. 创建个人博客\n\n## 3.1 什么是GitHub Pages\n\n　　   [Github Pages](https://pages.github.com/) 是面向用户、组织和项目开放的公共静态页面搭建托管服务，站点被免费托管在[GitHub](https://github.com/)上，可以使用Github Pages默认提供的域名github.io 或者自定义域名（域名需要买买买）来发布站点。\n\n## 3.2 创建GitHub Pages 3.2.1 在自己的GitHub上创建一个repository\n   1.New repository \n   ![在这里插入图片描述](https://img-blog.csdnimg.cn/20190911220523292.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_1,color_FFFFFF,t_70)\n2.Repository name 必须是 GitHub用户名.github.io \n![在这里插入图片描述](https://img-blog.csdnimg.cn/2019091122072079.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n3.如上截图，点击下方的Create repository按钮即可完成创建\n\n\n## 3.2.2 Git clone 创建的repository到本地\n\n - 首先创建[SSH  key](https://github.com/Hunter1023/learn_Git/wiki/%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93#ssh)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190911192459332.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n这一步直接三个回车按默认设置设置即可（如图三个箭头）\n　　\n - 在自己的电脑上选择一个合适的位置或创建一个文件夹，用来存放本地的repository。打开上述在GitHub上创建的repository，Clone or download → Clone with SSH 复制SSH地址![在这里插入图片描述](https://img-blog.csdnimg.cn/20190911221146767.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_1,color_FFFFFF,t_70)\n在本地repository的文件夹下，鼠标右键点击空白处，选择git bash， \n通过git clone 复制的SSH地址复制到本地\n\n## 3.2.3 在repository根目录下写一个简单的HTML文件\n\n例如： ![在这里插入图片描述](https://img-blog.csdnimg.cn/20190911221320114.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n## 3.2.4 将repository的改动推送给GitHub上的repository\n\n\n修改一个文件并且将文件提交到本地的分支并且推送到远程服务器的操作如下：\n\n    git add .\n    \n    git commit -m \"some str\"\n\n    git push\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190911202918220.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n效果如下\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190911202900407.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n## 3.2.5 访问地址https://GitHub用户名.github.io,就能读取到最基本的个人网页\n\n## 4.[安装node.js](https://blog.csdn.net/weixin_39345384/article/details/80097858#t1)\n\n## 5.[安装hexo](https://blog.csdn.net/weixin_39345384/article/details/80098228#t2)\n\n## 6. 本地搭建博客\n\n在电脑上找个合适位置或者新建文件夹，用来存放之后创建的博客。 \n在博客文件夹下，打开git bash\n\n## 6.1 初始化博客框架：hexo init会自动生成如下文件：（*以下命令过程可能需要一段时间，在base中等待即可*）\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190911221833985.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n## 6.2 生成静态文件\n\n    hexo generate/hexo g\n\n## 6.3 启动服务器，本地预览博客效果\n\n    hexo server/hexo s\n\n## 7. 发布文章\n\n    hexo new [layout] <title> \n\n　　可以在命令中指定文章的布局（layout），默认为 post，可以通过修改 _config.yml 中的 default_layout 参数来指定默认布局。 根据不同的布局，会在不同的路径下生成title.md文件\n　　\n|布局|  路径|\n|--|--|\n| post |  source/_posts|\n| page |  source|\n| draft |  source/_drafts|\n我们输入`hexo new \"test\"`\n即可看到相应文件路径下生成了test.md\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190911222705339.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\ntitle是文章的标题，tags是标签，还可以添加categories分类，对发表的博文进行归纳整理。 \n---分割线之后的部分就是文章的内容。可用Markdown语法自由编辑。\n\n## 8. 将网站部署到个人的GitHub Pages上\n\n## 8.1 安装hexo-deployer-git\n\n    npm install hexo-deployer-git --save\n\n## 8.2 修改_config.yml文档中deploy的配置\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190911222844204.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n## 8.3 hexo deploy或hexo d完成部署\n\n　　将本地的静态网页部署到服务器上，即可通过https://GitHub用户名.github.io访问部署出来的页面。\n\n## 9. [Hexo框架下用NexT(v6.0+)主题美化博客](https://blog.csdn.net/weixin_39345384/article/details/80785373)\n\n","tags":["hello"]}]