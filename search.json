[{"title":"Mini-DSO","url":"/2020/04/27/Mini-DSO/","content":"![在这里插入图片描述](https://img-blog.csdnimg.cn/20200504105543608.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n<!-- more -->\n\n# Mini-DSO\nMini-WFG后续\n\n## 测量参数\n**测量时间:** `100us-500ms`\n\n**电压范围:** `0-30V`\n\n**绘制模式:** `向量或点`\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200503192600952.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n\n## 材料清单\n\n>  - STC8A8K64S4A12 MCU x 1\n>  - SSD1306 OLED(SPI) x 1\n>  - 电阻:\n> \n> \t     1W   10k x 1  \n>        1/4W  2k x 2 \n> \t     1/4W 10k x 1\n> \n>  - 电容:\n> \n>           47uF   x 1 \n>           0.01uF x 1\n>  - 5V升压模块       x 1\n>  - EC11 编码器      x 1\n>  - 按键自锁开关     x 1\n>  - 2-Pin 接线柱    x 1\n>  - 40-pin芯片底座  x 1\n>  - 排母:\n> \n>           7-Pin x 1  \n>           2-Pin x 1\n> \n>  - 锂电池\n> \n>        3.7V\n\n# 展示\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200504105508581.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200504105518616.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200504105534973.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200504105543608.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)","tags":["DIY"]},{"title":"Mini-WFG","url":"/2020/04/07/Mini-WFG/","content":"![在这里插入图片描述](https://img-blog.csdnimg.cn/20200504102122751.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n<!-- more -->\n\n\n# Mini-WFG\n在进行电路测试和检测时，经常会用到波形发生器，由于疫情影响，在家并没有函数信号发生器，于是在网上搜集资料DIY了这款mini波形发生器，采用的是STC15W4K32S4,STC15W4系列集成了一组增强型PWM波形发生器，能更好的产生PWM。\n\n\n## 测量参数\n**输出模式:** `方波、正弦波`\n\n**输出频率:** `0-2MHz`\n\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200503192330866.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n\n## 材料清单\n\n>  - STC15W4K32S4 MCU x 1\n>  - LCD12864液晶屏 x 1\n>  - 电阻:\n> \n> \t     10k电位器    x 1  \n>        200k电位器   x 1\n> \t     500欧电位器   x 1\n> \n>  - 1mH色环电感 x 1\n>  - 220nF独石电容 x 1\n>  - 5V升压模块 x 1\n>  - EC11 编码器 x 1\n>  - 按键自锁开关 x 1\n>  - 2-Pin 接线柱 x 1\n>  - 40-pin芯片底座 x 1\n>  - 排母:\n> \n>           16-Pin x 1  \n>           2-Pin  x 1\n> \n>  - 锂电池\n> \n>           3.7V\n\n# 展示\n![在这里插入图片描述](https://img-blog.csdnimg.cn/202005041023104.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200504102320402.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200504102329231.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)","tags":["DIY"]},{"title":"OpenMV4","url":"/2020/03/23/OPENMV4/","content":"![在这里插入图片描述](https://img-blog.csdnimg.cn/20200509201122286.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n<!-- more -->\n\n### 参考众多开源项目修改完善的一款opmv4硬件\n原理图\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200509201348275.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\nPCB\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200509201145183.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n正面\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020050920115280.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n反面\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200509201157472.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n**此处@星瞳科技（吃相过于难看）**\n\n\n\n","tags":["DIY"]},{"title":"X-Bot","url":"/2019/12/11/X-Bot/","content":"![在这里插入图片描述](https://img-blog.csdnimg.cn/20200424102109478.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n<!-- more -->\n## 项目介绍\n\n**这是一个超迷你写字机器人。**\n\n\n## 整体展示\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200424102029730.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n## 关于机械臂\n\n那么CoreXY结构是什么东西呢？\n\n首先我们来了解一下目前比较流行的机械臂结构有哪些：\n\n### 最经典的XYZ结构\n\n![\\[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-Sq0njRF2-1587695201756)(img/xbot2.jpg)\\]](https://img-blog.csdnimg.cn/20200424102922437.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n\n![\\[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-4oRA6vWa-1587695201799)(img/xbot4.jpg)\\]](https://img-blog.csdnimg.cn/20200424103009624.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n这一类结构大家应该一眼就能看明白是怎么回事，简单说就是在X、Y、Z三个方向上都是独立的直线运动，虽然形式有多种比如图中的第一种被称作龙门式，一般在雕刻机领域用的很多；而第二种在比较追求小型化的3D打印机上经常可以看到其身影。\n\nXYZ结构的好处就结构非常简单，控制也很简单，由于三个方向上的运动都是解耦的（一个方向的运动不会影响到另一个方向），而且相对来说由于是纯线性驱动，其运动精度会比较容易控制。\n\n### DELTA结构\n![\\[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-838w1t5X-1587695201809)(img/xbot5.jpg)\\]](https://img-blog.csdnimg.cn/20200424103156477.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n\n\n\n由于我们身处三维空间，因此来说只要是三个*线性独立*的向量都可以用来表征空间中一个唯一的坐标，对应于机械臂中，就是说只要我有三个可以精确驱动控制的电机，我就可以玩出各种花样让一个机械臂精确地运动到某一点。在XYZ结构中，X、Y、Z三个电机的地位并不是对等的，而DELTA结构则以一种很巧妙的方式完全对称地放置三个电机，如上图所示。通过三根连杆两端一共六个万向关节的约束，DELTA机械臂的末端可以运动到三维空间中的任意一点（在行程范围内，且行程空间并不是和XYZ结构一样的一个立方体），这种结构的好处就是非常的**炫酷**，哈哈，其实几年前个人最早决定设计自己的3D打印机的时候，就对DELTA结构非常的热衷~由于杠杆效应，一般来说这类机械臂的运行速度都要比XYZ要快一些，同时由于非线性控制坐标解算需要消耗更多的计算资源，有兴趣的同学可以去了解一下DELTA结构到XYZ坐标的解算公式推导过程。\n\n### 圆柱结构\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200424103417395.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n\n提到XYZ大家首先想到的是笛卡尔坐标系，然而我们在中学的时候就学过另一种坐标系叫极坐标系，也就是用一个角度和一个长度就可以表征平面内一个点的坐标，而且其跟XY坐标的转换也很方便。那么讲极坐标系再加上一个Z轴的直线运动，就得到了这样的圆柱结构机械臂。这类机械臂在实际应用中见到的比较少，因为同为极坐标结构，下面这种SCARA结构有着更“拟人”的效果。\n\n### SCARA结构\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020042410335334.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n\n这一类机械臂的结构非常像人类手臂（虽然自由度差了很多，人手臂应该是7个自由度），优点很明显就是节省空间，缺点也很明显，由于远端的误差放大作用，对于电机角度控制的精度要求非常高，电机的一点点抖动传递到末端都可能造成很大的误差，因此在工业机械臂中，这类机械臂一般都是使用传动误差极小的谐波减速器。\n\n### CoreXY结构\n\n其实关于机械臂的结构还有各种各样，结构设计师们的脑洞实在是让人叹为观止，有兴趣的小伙伴可以去google一下国外的各种3D打印机作品，非常的有意思。这里只最后介绍一下X-Bot中采用的CoreXY结构。\n\n![\\[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-Nqam1vI0-1587695201823)(img/xbot7.jpg)\\]](https://img-blog.csdnimg.cn/20200424103457103.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n\n与传统XY结构不同，CoreXY是一种仅使用一根同步带就可以控制末端在XY两个方向运动的结构，非常巧妙；但是和绝大多数其他结构一样，CoreXY这种结构也会有电机和限位开关分散分布，电路连接走线比较麻烦的缺点；于是在其基础上，X-Bot改变了电机放置的位置，将其由两边放置改为中央放置，所有的电路板和电机集中布置，结构更紧凑。\n\n![\\[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-R4duoZEM-1587695201826)(img/xbot8.jpg)\\]](https://img-blog.csdnimg.cn/20200424103507201.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n\n\n\n## 电路设计篇\n\n电路很简单就是一个STM32的最小系统，电机驱动直接使用了一体式的驱动器，可以tb搜索一下有很多。蓝牙模块使用的是HC-05，12V供电就行。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200424102052808.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n## 固件篇\n直接移植了Arduino上面很成熟的grbl固件到STM32上，参数都已经设置好了，也把坐标转换函数从XY改为了CoreXY，keil直接烧录就能用了。\n\n## 其他\n在资料中含有借鉴的所有资料\n","tags":["DIY"]},{"title":"智能车","url":"/2019/09/23/智能车/","content":"怀恋做车的日子(๑•̀ㅂ•́)و✧\n<!-- more -->\n\n# 以这个文章为目录记录我做车的过程\n\n## 基础学习\n\n## 编程软件\n\n和keil使用还是有区别的，语言英文或日文，界面简单，速度快\n[编程软件IAR安装使用及程序下载](https://blog.csdn.net/qq_41262681/article/details/97248143)\n\n## 例程\n\n\n\nk66基础知识和例程学习\n\n> 下载链接：https://pan.baidu.com/s/1rWpFeGBzgUOg8GWnf25F4w 密码：9fmo\n\n[三天入门M4笔记](https://blog.csdn.net/qq_41262681/article/details/97269180)\n\n## 进阶\n\n相关模块的使用细节还不是很熟悉\n\n - 距离传感器\n - 编码器\n - 电机\n - MPU6050\n\n…\n**算法部分**\n\n控制算法\n\n**各种链接**\n关于`锁相环`:\n[https://blog.csdn.net/ReCclay/article/details/79273293](https://blog.csdn.net/ReCclay/article/details/79273293)\n[https://blog.csdn.net/leoufung/article/details/50268031](https://blog.csdn.net/leoufung/article/details/50268031)\n\n## 硬件部分\n\n### 认识电感\n\n**工字电感**\n感应赛道交变磁场，产生感应电动势，后续电路通过对感应电动势进行一些列的选频、放大、检波，得到稳定信号并输入到单片机对赛道信息进行识别，对电机发出加减速、舵机直行拐弯的指令。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200426095430306.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n\n\n`电感是电磁车的眼睛`，赛道中漆包线流过的微弱的电流与电感产生电磁感应，产生的感应电流经过运放放大，最后传给单片机的AD采集口，即可获取赛道信息。\n\n### 电感分布探究\n\n**基本的分布认知**\n电感水平左右放置，漆包线与电感垂直的时候产生的感应电流最大，在赛道上 从左至右移动电感，电感上面感应电流应该是先逐渐变大，再逐渐变小。![在这里插入图片描述](https://img-blog.csdnimg.cn/20200426095555828.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n`电感安装时要注意相邻两个电感切忌安装过近`，至少要有两厘米的距离，否则会产生互感现象，具体现象就是过十字的时候车身会产生振动，严重的会导致十字直接冲出赛道。\n\n**深入的探究分布**\n电感排布方案是制约电磁智能车竞赛成绩的关键因素之一，下面我们就深入地探究下，如何确定一个好的电感排布方案。\n\n一.**双水平电感排布方案**![在这里插入图片描述](https://img-blog.csdnimg.cn/20200426095659325.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n如上图，这种双电感平行排布的方案是电磁车结合赛道采用的电感排布的最基本的方案，此方案也可以使得电磁车简单地循迹，但效果并不太理想。![在这里插入图片描述](https://img-blog.csdnimg.cn/20200426095722664.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n当小车如上图，将水平两端电感对称放置时，此时小车也应该处于赛道电磁线中心位置，左右两边电感正常情况下应相差不大，即差不多相等。即在直道行驶时可以保持良好的采集数据获取，通过计算分析两端电感数值，就可以判断出小车与赛道中心线的偏离方向及偏差量，从而做出相应的方向控制。\n但双电感排布也有弊端，如在弯道情况下，不能很好地采集到数据，没有办法精确地计算出偏差量，只能大致从数值中推测出小车的偏移方向。![在这里插入图片描述](https://img-blog.csdnimg.cn/2020042609574767.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n如上图，水平电感并没有跟赛道上的电磁线有很好的角度(粗色指赛道电磁线)\n\n二.**八字形电感排布方案**\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020042609594858.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n八字形电感排布同样也可以跟双水平电感一样，在直道行驶时保持良好的采集数据获取，通过计算分析两端电感数值，判断出小车与赛道中心线的偏离方向及偏差量，从而做出相应的方向控制\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200426100009612.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n并且在弯道情况下，与赛道电磁线呈很好的角度，获取赛道信息更精确。\n但是前面说到，双水平电感在直道行驶有很好的优势，在这里八字形电感恰好在弯道行驶有很好的优势，不如把两者结合起来排布，使得电磁车在赛道上获取的信息更准确更充分，这就衍生出了第三种方案。\n\n三.**双T形电感排布方案**\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020042609583558.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n这种方案结合了两者优点，能够充分捕捉赛道上信息，通过采集每个电感的数值，加以合理处理，便可以解算出电磁车所在的赛道位置，能够很好的控制电磁车在赛道上行驶。\n除了上图所示排布方案，也可以使用下图的排布，道理皆一样。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200426100044899.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n\n**验证理想结果**\n认知了电感的作用，知道了电感如何排布，下面我们就要做最后的硬件方面的测试，看是否呈现理想结果。\n\n**首先前提:** 1.有设计好的运放板 2.电感排布按上述策略对称排布好 3.调用库函数，学会ADC采集\n\n这里主要简略讲下，如何判断理想结果:\n粗糙地操作方法就是，用显示屏显示出每个电感的采集数值，将小车放置赛道电磁线中间，左右匀速摆动小车，观察数值是否呈规律变化，有无大的跳变，如果呈均匀变化趋势，则粗略判断可以稳定地采集数据\n更加直观地方法就是，采用上位机，将每个电感的采集数值通过蓝牙传输到上位机上，采用波形显示观察，观察波形是否平滑，是否上下对称。(具体操作如上所讲)![在这里插入图片描述](https://img-blog.csdnimg.cn/20200426100153696.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n这里上位机显示的电感为何如此之小？这里是我将采集到的电感数值做了归一化处理，下文会接着讲到。\n\n### 软件部分\n\n**采集滤波**\n\n简单地一个adc采集获取电感的数值是远远不够，采集到的信息可能是不准确的，需要采集多次，通过各种滤波算法处理才能得到一个较好的数值，这样用起来才可靠。网上的滤波算法有很多这里我就不再啰嗦描述。\n在这里我只贴出一种算法，给大家简单地描述下：\n\n```javascript\n  for(num = 0; num < 10; num++)\n    {\n    i = adc_once(ADC1_SE9,ADC_12bit); j = adc_once(ADC1_SE9,ADC_12bit); k = adc_once(ADC1_SE9,ADC_12bit);  // B1-4\n        //2.取中值\n        if (i > j)\n        {\n          tmp = i; i = j; j = tmp;\n         }\n         if (k > j) \n           tmp = j;\n         else if(k > i) \n           tmp = k; \n         else \n          tmp = i;\n         sum+=tmp;\n    }\n    AD_VAL4=sum/10;\n    sum=0;\n```\n如上图这里所用的滤波算法就是中值平均滤波法\n方法就是：相当于“中值滤波法”+“算术平均滤波法”，连续采样10次，去掉一个最大值和一个最小值，最后再算术平均。\n\n - 优点：融合了两种滤波法的优点， 对于偶然出现的脉冲性干扰，可消除由于脉冲干扰所引起的采样值偏差。\n - 缺点：测量速度较慢， 比较浪费 RAM(不过对于智能车所使用的MCU，问题不是太大)\n\n**归一化处理**\n很多一开始的小白，在做电磁这一部分时，可能并不太知道归一化，只是通过上面的滤波算法处理后，就用解算出来的电感数值，开始写控制算法，这样导致的结果就是，调出来的车可能容错率不高，适应性不强，换个场地，因受赛道各种因素的影响可能需要不停地调原有设定好的电感值，对整个程序框架影响还是挺大的。\n这里我给大家通俗地讲述下到底归一化该怎么处理。\n这里我们以一个电感采集为例，就把他命名为AD1，接下来的代码都是表示对AD1电感采集到的数值进行处理。\n\n 1. 首先第一步，我们还是先通过滤波算法对AD1电感采集到的数值进行滤波处理：\n\n```javascript\n //AD1-------------------------------------------------------------------------------------    \nfor(num = 0; num < 10; num++)\n{\ni = adc_once(ADC1_SE8,ADC_12bit); j = adc_once(ADC1_SE8,ADC_12bit); k = adc_once(ADC1_SE8,ADC_12bit); //B0-3\n    //2.取中值\n    if (i > j)\n    {\n      tmp = i; i = j; j = tmp;\n     }\n     if (k > j) \n       tmp = j;\n     else if(k > i) \n       tmp = k; \n     else \n      tmp = i;\n     sum+=tmp;\n}\nAD_VAL1=sum/10; \nsum=0;\n```\n\n2. 然后，我们需要把AD1电感放置在能够使其数值呈现最大的位置处，读出采集到的最大值是多少，如下图我采集到的就是4095，这里我们引入一个最大值，也引入一个最小值(最小值默认设置为0)。\n\n```javascript\nint   AD_val_1_min=0;\nint   AD_val_1_max=4095;\n```\n\n 3. 接着，对刚才滤波后的电感数值进行限幅处理\n\n```javascript\n //限幅\n  if(AD_VAL1>AD_val_1_max)  AD_VAL1=AD_val_1_max\n```\n\n4. 再然后，进行归一化处理，引入归一化后的电感数值ad_VAL1\n\n```javascript\n  //归一化\n  ad_VAL1=100*(AD_VAL1 - AD_val_1_min)/(AD_val_1_max-AD_val_1_min);\n```\n\n经过以上步骤处理，就可以把原先电感AD1采集到的数值给限制在0~100之间，电感数值随着赛道的改变就不会变的很大，因为本来给定的范围就很小，利用归一化处理得到的电感数值进行控制解算，会使得电磁车的适应场地能力更强。\n## 舵机调中处理\n[https://blog.csdn.net/weixin_43788952/article/details/105111594](https://blog.csdn.net/weixin_43788952/article/details/105111594)\n## 调试问题\nIAR的调试是最蛋疼的，一堆莫名其名的问题，慢慢总结吧\n\nJlink调试问题总结:[https://mp.weixin.qq.com/s/hCUpDCuZi6u8fS25hjMALQ](https://mp.weixin.qq.com/s/hCUpDCuZi6u8fS25hjMALQ)\n\n\n不能go to define总结：\n1，路径不能是中文\n几个办法试一下\n1.删除工程目录下Debug下Obj文件夹\n2.保证勾选“Generate browse information”一项。或者取消之后，选不编译，再添加，试试。(解决成功率很高)\n## 成果展示\n`猛男少女粉`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020042610194873.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n站在C位的我hh(～￣▽￣)～ \n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200426102102672.jpeg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n\n\n\n\n\n","tags":["智能车"]},{"title":"GitHub to HTML","url":"/2019/09/11/github_to_html/","content":"![在这里插入图片描述](https://img-blog.csdnimg.cn/20200424100832615.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n<!-- more -->\n## 1. 注册GitHub账号\n\n## 2. 安装Git\n\n## 3. 创建个人博客\n\n## 3.1 什么是GitHub Pages\n\n　　   [Github Pages](https://pages.github.com/) 是面向用户、组织和项目开放的公共静态页面搭建托管服务，站点被免费托管在[GitHub](https://github.com/)上，可以使用Github Pages默认提供的域名github.io 或者自定义域名（域名需要买买买）来发布站点。\n\n## 3.2 创建GitHub Pages 3.2.1 在自己的GitHub上创建一个repository\n   1.New repository \n   ![在这里插入图片描述](https://img-blog.csdnimg.cn/20190911220523292.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_1,color_FFFFFF,t_70)\n2.Repository name 必须是 GitHub用户名.github.io \n![在这里插入图片描述](https://img-blog.csdnimg.cn/2019091122072079.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n3.如上截图，点击下方的Create repository按钮即可完成创建\n\n\n## 3.2.2 Git clone 创建的repository到本地\n\n - 首先创建[SSH  key](https://github.com/Hunter1023/learn_Git/wiki/%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93#ssh)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190911192459332.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n这一步直接三个回车按默认设置设置即可（如图三个箭头）\n　　\n - 在自己的电脑上选择一个合适的位置或创建一个文件夹，用来存放本地的repository。打开上述在GitHub上创建的repository，Clone or download → Clone with SSH 复制SSH地址![在这里插入图片描述](https://img-blog.csdnimg.cn/20190911221146767.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_1,color_FFFFFF,t_70)\n在本地repository的文件夹下，鼠标右键点击空白处，选择git bash， \n通过git clone 复制的SSH地址复制到本地\n\n## 3.2.3 在repository根目录下写一个简单的HTML文件\n\n例如： ![在这里插入图片描述](https://img-blog.csdnimg.cn/20190911221320114.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n## 3.2.4 将repository的改动推送给GitHub上的repository\n\n\n修改一个文件并且将文件提交到本地的分支并且推送到远程服务器的操作如下：\n\n    git add .\n    \n    git commit -m \"some str\"\n\n    git push\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190911202918220.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n效果如下\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190911202900407.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n## 3.2.5 访问地址https://GitHub用户名.github.io,就能读取到最基本的个人网页\n\n## 4.[安装node.js](https://blog.csdn.net/weixin_39345384/article/details/80097858#t1)\n\n## 5.[安装hexo](https://blog.csdn.net/weixin_39345384/article/details/80098228#t2)\n\n## 6. 本地搭建博客\n\n在电脑上找个合适位置或者新建文件夹，用来存放之后创建的博客。 \n在博客文件夹下，打开git bash\n\n## 6.1 初始化博客框架：hexo init会自动生成如下文件：（*以下命令过程可能需要一段时间，在base中等待即可*）\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190911221833985.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n## 6.2 生成静态文件\n\n    hexo generate/hexo g\n\n## 6.3 启动服务器，本地预览博客效果\n\n    hexo server/hexo s\n\n## 7. 发布文章\n\n    hexo new [layout] <title> \n\n　　可以在命令中指定文章的布局（layout），默认为 post，可以通过修改 _config.yml 中的 default_layout 参数来指定默认布局。 根据不同的布局，会在不同的路径下生成title.md文件\n　　\n|布局|  路径|\n|--|--|\n| post |  source/_posts|\n| page |  source|\n| draft |  source/_drafts|\n我们输入`hexo new \"test\"`\n即可看到相应文件路径下生成了test.md\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190911222705339.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\ntitle是文章的标题，tags是标签，还可以添加categories分类，对发表的博文进行归纳整理。 \n---分割线之后的部分就是文章的内容。可用Markdown语法自由编辑。\n\n## 8. 将网站部署到个人的GitHub Pages上\n\n## 8.1 安装hexo-deployer-git\n\n    npm install hexo-deployer-git --save\n\n## 8.2 修改_config.yml文档中deploy的配置\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190911222844204.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTY3MDA4,size_16,color_FFFFFF,t_70)\n\n## 8.3 hexo deploy或hexo d完成部署\n\n　　将本地的静态网页部署到服务器上，即可通过https://GitHub用户名.github.io访问部署出来的页面。\n\n## 9. [Hexo框架下用NexT(v6.0+)主题美化博客](https://blog.csdn.net/weixin_39345384/article/details/80785373)\n\n","tags":["hello"]}]